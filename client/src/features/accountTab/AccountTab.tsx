import { Form, Radio, Switch } from 'antd'
import React, { useContext } from 'react'
import { useTranslations } from 'next-intl'

import { ReactionTypes, ThemeModeContext, ViewMessageTypes } from '@shared/lib/antd/AntdProvider'
import { WrapperMainWindow } from '@shared/ui/templates/WrapperMainWindow'

export const AccountTab: React.FC = () => {
  const { isDarkTheme, setIsDarkTheme, viewMessageType, setViewMessageType, reactionDefault, setReactionDefault } = useContext(ThemeModeContext)

  const t = useTranslations('Index')

  return (
    <WrapperMainWindow>
      <Form.Item label={t('turnDarkTheme')}>
        <Switch checked={isDarkTheme} onChange={(chk) => setIsDarkTheme(chk)} />
      </Form.Item>

      <Form.Item label={'–í–∏–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π'}>
        <Radio.Group value={viewMessageType} onChange={(e) => setViewMessageType(e.target.value)}>
          <Radio value={ViewMessageTypes.default}>–ü–æ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É</Radio>
          <Radio value={ViewMessageTypes.leftRight}>–ü–æ —Ä–∞–∑–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</Radio>
        </Radio.Group>
      </Form.Item>

      <Form.Item label={'–†–µ–∞–∫—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'}>
        <Radio.Group value={reactionDefault} onChange={(e) => setReactionDefault(e.target.value)}>
          <Radio.Button value={ReactionTypes.like}>üëç</Radio.Button>
          <Radio.Button value={ReactionTypes.hearth}>‚ù§Ô∏è</Radio.Button>
          <Radio.Button value={ReactionTypes.fire}>üî•</Radio.Button>
        </Radio.Group>
      </Form.Item>
    </WrapperMainWindow>
  )
}
